 

Как отказаться от изменений в файле (файлах) находящихся в рабочем каталоге (work directory)?
git checkout -- <file>: отменяет изменения в указанном файле и восстанавливает его до состояния последнего коммита.

Как удалить все новые файлы, если их не нужно включать в коммит? (Очистка репозитория от лишних файлов)

git clean -xdn, -xdf: удаляет все неотслеживаемые файлы и директории из рабочего каталога.(посмотреть ненужные файлы).

Как вернуть файл из индекса в рабочий каталог?

git restore --staged <file>: удаляет файл из индекса (staging area) и возвращает его в рабочий каталог, сохраняя последнюю версию коммита.

Как отменить ошибочный commit? (перечислить все варианты)

git revert (HEAD) <commit>: создает новый коммит, который отменяет изменения, внесенные в указанный коммит, и сохраняет историю.
(HEAD-для последнего коммиту)
git reset (HEAD~1) <commit>: отменяет коммиты, делая их недоступными, но сохраняет изменения в рабочем каталоге. Предупреждение: 

не рекомендуется использовать эту команду для коммитов, которые уже были отправлены на сервер Git.

Как исправить комментарии к коммиту?
git commit --amend: позволяет изменить последний коммит, включая его комментарий.

Как исправить коммит, отправленный на GitHub?

Если вы исправляете коммит до его отправки на GitHub, вы можете использовать команду git commit --amend для изменения коммита.
Если коммит уже был отправлен на GitHub, вам понадобится использовать команду git push --force, чтобы принудительно обновить историю в удаленном репозитории. 
Однако, будьте осторожны при использовании этой команды, так как она может нарушить работу других разработчиков, работающих с тем же репозиторием.



Почему нельзя применять команду git reset к коммитам которые выгружены на сервер Git?


В ответах на вопросы 1-6  необходимо указать конкретные команда git.
